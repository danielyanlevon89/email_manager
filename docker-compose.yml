version: '3.2'
services:

    #APP Service
    app:
        build:
            args:
                user: levon
                uid: 1000
            context: .
            dockerfile: ./docker/php/Dockerfile
        container_name: app
        restart: unless-stopped
        tty: true
        environment:
            SERVICE_NAME: app
            SERVICE_TAGS: dev
        working_dir: /var/www
        volumes:
            - ./:/var/www
            - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
            - ./docker/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini:ro
        networks:
            - app-network

    #Nginx Service
    webserver:
        build: ./docker/nginx
        container_name: webserver
        restart: unless-stopped
        tty: true
        ports:
            - '8030:80'
            - '44330:443'
        volumes:
            - ./:/var/www
            - ./docker/nginx-logs:/var/log/nginx
        networks:
            - app-network

    #DB Service
    db:
        image: postgres:9.6.6
        tty: true
        ports:
            - '${DB_PORT}:5432'
        volumes:
            - dbdata:/var/lib/postgresql/data
        container_name: db
        environment:
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_USER: ${DB_USERNAME}
        networks:
            - app-network

    #vite
    vite:
        image: node:latest
        container_name: vite
        entrypoint: /bin/sh
        ports:
            - '${VITE_PORT}:${VITE_PORT}'
        working_dir: /var/www
        volumes:
            - type: bind
              source: ./
              target: /var/www
        tty: true
        networks:
            - app-network

    #DB Admin Service
    pgadmin:
        image: dpage/pgadmin4
        depends_on:
            - db
        ports:
            - '${PGADMIN_PORT}:80'
        container_name: pgadmin
        environment:
            PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
            PGADMIN_DEFAULT_PASSWORD: admin
        restart: unless-stopped
        networks:
            - app-network
    redis:
        image: redis
        container_name: redis
        command: redis-server /usr/local/etc/redis/redis.conf
        volumes:
            - ./redis.conf:/usr/local/etc/redis/redis.conf
        ports:
            - "6379"
        networks:
            - app-network
#Docker Networks
networks:
    app-network:
        driver: bridge
#Volumes
volumes:
    dbdata:
        driver: local
